{"ast":null,"code":"var _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { mutate } from 'swr';\nimport { fetcher } from './util/fetcher';\n\nconst CreateGigForm = ({}) => {\n  const {\n    0: gigName,\n    1: setGigName\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: choice,\n    1: setChoice\n  } = useState(true);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n\n      if (gigName.length === 0 || password.length === 0) {\n        alert(\"You can't have a blank Gig Name or Password\");\n      }\n\n      const {\n        data,\n        error\n      } = await fetcher(`/api/${choice ? \"login\" : \"create\"}`, {\n        gigName,\n        password\n      });\n\n      if (error) {\n        alert(error);\n        return;\n      }\n\n      await mutate(\"api/set\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    value: gigName,\n    onChange: e => setGigName(e.target.value),\n    placeholder: \"Gig Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    className: \"log-button\",\n    type: \"submit\",\n    value: choice ? \"View a gig\" : \"Create a gig\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    onClick: () => setChoice(!choice),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"change\"));\n};\n\nexport default CreateGigForm;","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx"],"names":["React","useState","mutate","fetcher","CreateGigForm","gigName","setGigName","password","setPassword","choice","setChoice","e","preventDefault","length","alert","data","error","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,MAAMC,aAAa,GAAG,CAAC,EAAD,KAAQ;AAC5B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,IAAD,CAApC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,MAAOU,CAAP,IAAa;AACrBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAIP,OAAO,CAACQ,MAAR,KAAmB,CAAnB,IAAwBN,QAAQ,CAACM,MAAT,KAAoB,CAAhD,EAAmD;AACjDC,QAAAA,KAAK,CACH,6CADG,CAAL;AAGD;;AACD,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,MAAMb,OAAO,CAClC,QAAOM,MAAM,GAAG,OAAH,GAAa,QAAU,EADF,EAEnC;AACEJ,QAAAA,OADF;AAEEE,QAAAA;AAFF,OAFmC,CAArC;;AAOA,UAAIS,KAAJ,EAAW;AACTF,QAAAA,KAAK,CAACE,KAAD,CAAL;AACA;AACD;;AACD,YAAMd,MAAM,CAAC,SAAD,CAAZ;AACD,KApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBE;AACE,IAAA,KAAK,EAAIG,OADX;AAEE,IAAA,QAAQ,EAAGM,CAAC,IAAGL,UAAU,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EA2BE;AACE,IAAA,KAAK,EAAIX,QADX;AAEE,IAAA,QAAQ,EAAGI,CAAC,IAAGH,WAAW,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAF5B;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EAgCE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAA4C,IAAA,KAAK,EAAIT,MAAM,GAAG,YAAH,GAAkB,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF,EAmCE;AAAQ,IAAA,OAAO,EAAI,MAAMC,SAAS,CAAC,CAACD,MAAF,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,CADF;AAyCD,CA9CD;;AAgDA,eAAeL,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { mutate } from 'swr'\nimport { fetcher } from './util/fetcher'\n\nconst CreateGigForm = ({}) => {\n  const [gigName, setGigName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [choice, setChoice] = useState(true)\n\n  return (\n    <div>\n      <form\n        onSubmit={async (e) => {\n          e.preventDefault()\n          if (gigName.length === 0 || password.length === 0) {\n            alert(\n              \"You can't have a blank Gig Name or Password\"\n            )\n          }\n          const { data, error } = await fetcher(\n            `/api/${choice ? \"login\" : \"create\" }`,\n            {\n              gigName,\n              password\n            }\n          )\n          if (error) {\n            alert(error)\n            return\n          }\n          await mutate(\"api/set\")\n        }}\n      >\n        <input\n          value = {gigName}\n          onChange= {e =>setGigName(e.target.value)}\n          placeholder = \"Gig Name\"\n        />\n        <input\n          value = {password}\n          onChange= {e =>setPassword(e.target.value)}\n          placeholder = \"Password\"\n        />\n        <input className=\"log-button\" type=\"submit\" value = {choice ? \"View a gig\" : \"Create a gig\"}/>\n      </form>\n      <button onClick= { () => setChoice(!choice)}>\n        change\n      </button>\n    </div>\n  )\n}\n\nexport default CreateGigForm\n"]},"metadata":{},"sourceType":"module"}
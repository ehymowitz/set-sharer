{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createItem.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { mutate } from 'swr';\n\nvar CreateItem = function CreateItem() {\n  _s();\n\n  var _useState = useState(\"\"),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useFeed = useFeed(),\n      feed = _useFeed.feed;\n\n  return __jsx(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                mutate(\"/api/songs\", [{\n                  text: input,\n                  author: me\n                }].concat(_toConsumableArray(feed)), false);\n                setInput(\"\");\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"add\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(CreateItem, \"QBP22AytmxOfgLVhenW7cwN9UIs=\", true);\n\n_c = CreateItem;\nexport default CreateItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateItem\");","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createItem.tsx"],"names":["React","useState","mutate","CreateItem","input","setInput","useFeed","feed","e","preventDefault","text","author","me","target","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,KAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACGF,QAAQ,CAAC,EAAD,CADX;AAAA,MAChBG,KADgB;AAAA,MACTC,QADS;;AAAA,iBAENC,OAAO,EAFD;AAAA,MAEfC,IAFe,YAEfA,IAFe;;AAIvB,SACE;AACE,IAAA,QAAQ;AAAA,0EAAI,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACC,cAAF;AAEAP,gBAAAA,MAAM,CAAC,YAAD,GAAgB;AAACQ,kBAAAA,IAAI,EAAEN,KAAP;AAAcO,kBAAAA,MAAM,EAAEC;AAAtB,iBAAhB,4BAA8CL,IAA9C,IAAqD,KAArD,CAAN;AACAF,gBAAAA,QAAQ,CAAC,EAAD,CAAR;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAO,IAAA,KAAK,EAAID,KAAhB;AAAuB,IAAA,QAAQ,EAAK,kBAAAI,CAAC;AAAA,aAAIH,QAAQ,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAAZ;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAjBD;;GAAMX,U;;KAAAA,U;AAmBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useSongs } from './util/hooks'\nimport { mutate } from 'swr'\n\nconst CreateItem = () => {\n  const [input, setInput] = useState(\"\")\n  const { feed } = useFeed()\n\n  return (\n    <form\n      onSubmit = {async e => {\n          e.preventDefault()\n\n          mutate(\"/api/songs\", [{text: input, author: me}, ...feed], false)\n          setInput(\"\")\n      }}\n    >\n      <input value = {input} onChange = { e => setInput(e.target.value)} />\n      <input type=\"submit\" value=\"add\"/>\n    </form>\n  )\n}\n\nexport default CreateItem\n"]},"metadata":{},"sourceType":"module"}
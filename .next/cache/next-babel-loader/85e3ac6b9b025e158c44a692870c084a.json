{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { mutate } from 'swr';\nimport { fetcher } from './util/fetcher';\n\nvar CreateGigForm = function CreateGigForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      gigName = _useState[0],\n      setGigName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      login = _useState3[0],\n      setLogin = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var _yield$fetcher, data, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (gigName.length === 0 || password.length === 0) {\n                  alert(\"You can't have a blank Gig Name or Password\");\n                }\n\n                setLoading(true);\n                _context.next = 5;\n                return fetcher(\"/api/\".concat(login ? \"login\" : \"create\"), {\n                  gigName: gigName,\n                  password: password\n                });\n\n              case 5:\n                _yield$fetcher = _context.sent;\n                data = _yield$fetcher.data;\n                error = _yield$fetcher.error;\n\n                if (!error) {\n                  _context.next = 12;\n                  break;\n                }\n\n                console.log(error);\n                setLoading(false);\n                return _context.abrupt(\"return\");\n\n              case 12:\n                _context.next = 14;\n                return mutate(\"api/set\");\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    value: gigName,\n    onChange: function onChange(e) {\n      return setGigName(e.target.value);\n    },\n    placeholder: \"Gig Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: login ? \"View a gig\" : \"Create a gig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      setLogin(!login);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, login ? \"Create a Gig\" : \"View a Gig\"))));\n};\n\n_s(CreateGigForm, \"+wxU5uXE8Tq0fqDdQmtI6CI0LeY=\");\n\n_c = CreateGigForm;\nexport default CreateGigForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGigForm\");","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx"],"names":["React","useState","mutate","fetcher","CreateGigForm","gigName","setGigName","password","setPassword","login","setLogin","loading","setLoading","e","preventDefault","length","alert","data","error","console","log","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACIH,QAAQ,CAAC,EAAD,CADZ;AAAA,MACnBI,OADmB;AAAA,MACVC,UADU;;AAAA,mBAEML,QAAQ,CAAC,EAAD,CAFd;AAAA,MAEnBM,QAFmB;AAAA,MAETC,WAFS;;AAAA,mBAGAP,QAAQ,CAAC,KAAD,CAHR;AAAA,MAGnBQ,KAHmB;AAAA,MAGZC,QAHY;;AAAA,mBAIIT,QAAQ,CAAC,KAAD,CAJZ;AAAA,MAInBU,OAJmB;AAAA,MAIVC,UAJU;;AAM1B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ;AAAA,0EAAE,iBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACC,cAAF;;AACA,oBAAIT,OAAO,CAACU,MAAR,KAAmB,CAAnB,IAAwBR,QAAQ,CAACQ,MAAT,KAAoB,CAAhD,EAAmD;AACjDC,kBAAAA,KAAK,CACH,6CADG,CAAL;AAGD;;AACDJ,gBAAAA,UAAU,CAAC,IAAD,CAAV;AAPQ;AAAA,uBAQsBT,OAAO,gBAC3BM,KAAK,GAAG,OAAH,GAAa,QADS,GAEnC;AACEJ,kBAAAA,OAAO,EAAPA,OADF;AAEEE,kBAAAA,QAAQ,EAARA;AAFF,iBAFmC,CAR7B;;AAAA;AAAA;AAQAU,gBAAAA,IARA,kBAQAA,IARA;AAQMC,gBAAAA,KARN,kBAQMA,KARN;;AAAA,qBAeJA,KAfI;AAAA;AAAA;AAAA;;AAgBNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,gBAAAA,UAAU,CAAC,KAAD,CAAV;AAjBM;;AAAA;AAAA;AAAA,uBAoBFV,MAAM,CAAC,SAAD,CApBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBE;AACE,IAAA,KAAK,EAAIG,OADX;AAEE,IAAA,QAAQ,EAAG,kBAAAQ,CAAC;AAAA,aAAGP,UAAU,CAACO,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAb;AAAA,KAFd;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EA6BE;AACE,IAAA,KAAK,EAAIf,QADX;AAEE,IAAA,QAAQ,EAAG,kBAAAM,CAAC;AAAA,aAAGL,WAAW,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAd;AAAA,KAFd;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,EAkCE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEb,KAAK,GAAG,YAAH,GAAkB,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,OAAO,EAAE,mBAAM;AAACC,MAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AAAiB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,GAAG,cAAH,GAAoB,YAD5B,CADA,CAnCF,CADF,CADF;AA6CD,CAnDD;;GAAML,a;;KAAAA,a;AAqDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { mutate } from 'swr'\nimport { fetcher } from './util/fetcher'\n\nconst CreateGigForm = () => {\n  const [gigName, setGigName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [login, setLogin] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <div>\n      <form\n        onSubmit={async e => {\n          e.preventDefault()\n          if (gigName.length === 0 || password.length === 0) {\n            alert(\n              \"You can't have a blank Gig Name or Password\"\n            )\n          }\n          setLoading(true)\n          const { data, error } = await fetcher(\n            `/api/${login ? \"login\" : \"create\" }`,\n            {\n              gigName,\n              password\n            }\n          )\n          if (error) {\n            console.log(error)\n            setLoading(false)\n            return\n          }\n          await mutate(\"api/set\")\n        }}\n      >\n        <input\n          value = {gigName}\n          onChange= {e =>setGigName(e.target.value)}\n          placeholder = \"Gig Name\"\n        />\n        <input\n          value = {password}\n          onChange= {e =>setPassword(e.target.value)}\n          placeholder = \"Password\"\n        />\n        <input type=\"submit\" value={login ? \"View a gig\" : \"Create a gig\"}/>\n        <div>\n        <a onClick={() => {setLogin(!login)}}>\n          {login ? \"Create a Gig\" : \"View a Gig\"}\n        </a>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateGigForm\n"]},"metadata":{},"sourceType":"module"}
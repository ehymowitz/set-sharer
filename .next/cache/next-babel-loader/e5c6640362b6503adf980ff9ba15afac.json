{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createSongForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useSongs, useGigInfo } from './util/hooks';\nimport { mutate } from 'swr';\nimport { fetcher } from './util/fetcher';\n\nvar CreateSongForm = function CreateSongForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      artist = _useState2[0],\n      setArtist = _useState2[1];\n\n  var _useSongs = useSongs(),\n      songs = _useSongs.songs;\n\n  var _useGigInfo = useGigInfo(),\n      gigInfo = _useGigInfo.gigInfo;\n\n  var resetForm = function resetForm() {\n    setTitle(\"\");\n    setArtist(\"\");\n  };\n\n  return __jsx(\"div\", {\n    className: \"song-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!(artist.length < 1 || title.length < 1)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                alert(\"Fully fill out the form\");\n                resetForm();\n                return _context.abrupt(\"return\");\n\n              case 5:\n                if (!(!gigInfo || !gigInfo.setName)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                alert(\"You need to be viewing a gig to add a song\");\n                resetForm();\n                return _context.abrupt(\"return\");\n\n              case 9:\n                fetcher(\"/api/song/create\", {\n                  title: title,\n                  artist: artist\n                });\n                mutate(\"/api/songs\", [{\n                  title: title,\n                  artist: artist,\n                  Set: useGigInfo\n                }].concat(_toConsumableArray(songs)));\n                resetForm();\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: title,\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    placeholder: \"Song Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    value: artist,\n    onChange: function onChange(e) {\n      return setArtist(e.target.value);\n    },\n    placeholder: \"Song Artist\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), __jsx(\"input\", {\n    className: \"submit\",\n    type: \"submit\",\n    value: \"Add\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(CreateSongForm, \"fobnSNjstHCPAmsNM7RDXLZhfYQ=\", false, function () {\n  return [useSongs, useGigInfo];\n});\n\n_c = CreateSongForm;\nexport default CreateSongForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSongForm\");","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createSongForm.tsx"],"names":["React","useState","useSongs","useGigInfo","mutate","fetcher","CreateSongForm","title","setTitle","artist","setArtist","songs","gigInfo","resetForm","e","preventDefault","length","alert","setName","Set","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSongs, useGigInfo } from './util/hooks'\nimport { mutate } from 'swr'\nimport { fetcher } from './util/fetcher'\n\nconst CreateSongForm = () => {\n  const [title, setTitle] = useState(\"\")\n  const [artist, setArtist] = useState(\"\")\n  const { songs } = useSongs()\n  const { gigInfo } = useGigInfo()\n\n  const resetForm = () => {\n    setTitle(\"\")\n    setArtist(\"\")\n  }\n\n  return (\n    <div className=\"song-form\">\n      <form\n      onSubmit = {async e => {\n        e.preventDefault()\n\n        if (artist.length < 1 || title.length < 1) {\n          alert(\"Fully fill out the form\")\n          resetForm()\n          return;\n        }\n\n        if ( !gigInfo || !gigInfo.setName ){\n          alert(\"You need to be viewing a gig to add a song\")\n          resetForm()\n          return\n        }\n\n        fetcher(\"/api/song/create\", {\n          title: title,\n          artist: artist,\n        })\n        mutate(\"/api/songs\", [{title: title, artist: artist, Set: useGigInfo}, ...songs])\n        resetForm()\n      }}\n      >\n        <div className=\"inputs\">\n          <input value = {title} onChange = { e => setTitle(e.target.value)} placeholder = \"Song Name\"/>\n          <input value = {artist} onChange = { e => setArtist(e.target.value)} placeholder = \"Song Artist\"/>\n        </div>\n        <input className = \"submit\" type=\"submit\" value=\"Add\"/>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateSongForm\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { mutate } from 'swr';\nimport { fetcher } from './util/fetcher';\n\nvar CreateGigForm = function CreateGigForm(_ref) {\n  _s();\n\n  var loggedIn = _ref.loggedIn,\n      onChange = _ref.onChange;\n\n  var _useState = useState(\"\"),\n      gigName = _useState[0],\n      setGigName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      choice = _useState3[0],\n      setChoice = _useState3[1];\n\n  var handleChange = function handleChange(e) {\n    onChange(e.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var _yield$fetcher, data, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (gigName.length === 0 || password.length === 0) {\n                  alert(\"You can't have a blank Gig Name or Password\");\n                }\n\n                _context.next = 4;\n                return fetcher(\"/api/\".concat(choice ? \"login\" : \"create\"), {\n                  gigName: gigName,\n                  password: password\n                });\n\n              case 4:\n                _yield$fetcher = _context.sent;\n                data = _yield$fetcher.data;\n                error = _yield$fetcher.error;\n\n                if (!error) {\n                  _context.next = 10;\n                  break;\n                }\n\n                console.log(error);\n                return _context.abrupt(\"return\");\n\n              case 10:\n                _context.next = 12;\n                return mutate(\"api/set\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    value: gigName,\n    onChange: function onChange(e) {\n      return setGigName(e.target.value);\n    },\n    placeholder: \"Gig Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: choice ? \"View a gig\" : \"Create a gig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setChoice(!choice);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"change\"));\n};\n\n_s(CreateGigForm, \"ENyRD3lkjZJRJi2pKrZWPPGxY00=\");\n\n_c = CreateGigForm;\nexport default CreateGigForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGigForm\");","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx"],"names":["React","useState","mutate","fetcher","CreateGigForm","loggedIn","onChange","gigName","setGigName","password","setPassword","choice","setChoice","handleChange","e","target","value","preventDefault","length","alert","data","error","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA4B;AAAA;;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAClBL,QAAQ,CAAC,EAAD,CADU;AAAA,MACzCM,OADyC;AAAA,MAChCC,UADgC;;AAAA,mBAEhBP,QAAQ,CAAC,EAAD,CAFQ;AAAA,MAEzCQ,QAFyC;AAAA,MAE/BC,WAF+B;;AAAA,mBAGpBT,QAAQ,CAAC,KAAD,CAHY;AAAA,MAGzCU,MAHyC;AAAA,MAGjCC,SAHiC;;AAKhD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ;AAAA,2EAAE,iBAAOF,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACG,cAAF;;AACA,oBAAIV,OAAO,CAACW,MAAR,KAAmB,CAAnB,IAAwBT,QAAQ,CAACS,MAAT,KAAoB,CAAhD,EAAmD;AACjDC,kBAAAA,KAAK,CACH,6CADG,CAAL;AAGD;;AANO;AAAA,uBAOsBhB,OAAO,gBAC3BQ,MAAM,GAAG,OAAH,GAAa,QADQ,GAEnC;AACEJ,kBAAAA,OAAO,EAAPA,OADF;AAEEE,kBAAAA,QAAQ,EAARA;AAFF,iBAFmC,CAP7B;;AAAA;AAAA;AAOAW,gBAAAA,IAPA,kBAOAA,IAPA;AAOMC,gBAAAA,KAPN,kBAOMA,KAPN;;AAAA,qBAcJA,KAdI;AAAA;AAAA;AAAA;;AAeNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAfM;;AAAA;AAAA;AAAA,uBAkBFnB,MAAM,CAAC,SAAD,CAlBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBE;AACE,IAAA,KAAK,EAAIK,OADX;AAEE,IAAA,QAAQ,EAAG,kBAAAO,CAAC;AAAA,aAAGN,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAAA,KAFd;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EA2BE;AACE,IAAA,KAAK,EAAIP,QADX;AAEE,IAAA,QAAQ,EAAG,kBAAAK,CAAC;AAAA,aAAGJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KAFd;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EAgCE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAIL,MAAM,GAAG,YAAH,GAAkB,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF,EAmCE;AAAQ,IAAA,OAAO,EAAI;AAAA,aAAMC,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,CADF;AAyCD,CAlDD;;GAAMP,a;;KAAAA,a;AAoDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { mutate } from 'swr'\nimport { fetcher } from './util/fetcher'\n\nconst CreateGigForm = ({ loggedIn, onChange }) => {\n  const [gigName, setGigName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [choice, setChoice] = useState(false)\n\n  const handleChange = (e) => {\n    onChange(e.target.value)\n  }\n\n  return (\n    <div>\n      <form\n        onSubmit={async (e) => {\n          e.preventDefault()\n          if (gigName.length === 0 || password.length === 0) {\n            alert(\n              \"You can't have a blank Gig Name or Password\"\n            )\n          }\n          const { data, error } = await fetcher(\n            `/api/${choice ? \"login\" : \"create\" }`,\n            {\n              gigName,\n              password\n            }\n          )\n          if (error) {\n            console.log(error)\n            return\n          }\n          await mutate(\"api/set\")\n        }}\n      >\n        <input\n          value = {gigName}\n          onChange= {e =>setGigName(e.target.value)}\n          placeholder = \"Gig Name\"\n        />\n        <input\n          value = {password}\n          onChange= {e =>setPassword(e.target.value)}\n          placeholder = \"Password\"\n        />\n        <input type=\"submit\" value = {choice ? \"View a gig\" : \"Create a gig\"}/>\n      </form>\n      <button onClick= { () => setChoice(!choice)}>\n        change\n      </button>\n    </div>\n  )\n}\n\nexport default CreateGigForm\n"]},"metadata":{},"sourceType":"module"}
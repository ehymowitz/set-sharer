{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { fetcher } from './util/fetcher';\nimport { LoggedIn } from '../pages/_app';\n\nvar CreateGigForm = function CreateGigForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      gigName = _useState[0],\n      setGigName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(true),\n      choice = _useState3[0],\n      setChoice = _useState3[1];\n\n  var _useContext = useContext(LoggedIn),\n      setLoggedIn = _useContext.setLoggedIn;\n\n  var logIn = function logIn() {\n    setLoggedIn(true);\n  };\n\n  return __jsx(\"div\", {\n    className: \"gig-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var _yield$fetcher, data, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (gigName.length === 0 || password.length === 0) {\n                  alert(\"You can't have a blank Gig Name or Password\");\n                }\n\n                _context.next = 4;\n                return fetcher(\"/api/\".concat(choice ? \"get\" : \"create\"), {\n                  gigName: gigName,\n                  password: password\n                });\n\n              case 4:\n                _yield$fetcher = _context.sent;\n                data = _yield$fetcher.data;\n                error = _yield$fetcher.error;\n\n                if (!error) {\n                  _context.next = 10;\n                  break;\n                }\n\n                alert(error);\n                return _context.abrupt(\"return\");\n\n              case 10:\n                logIn();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: gigName,\n    onChange: function onChange(e) {\n      return setGigName(e.target.value);\n    },\n    placeholder: \"Gig Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: choice ? \"View a gig\" : \"Create a gig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))), __jsx(\"a\", {\n    onClick: function onClick() {\n      return setChoice(!choice);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Want to create a gig? Click here\"));\n};\n\n_s(CreateGigForm, \"KbDv41iAmSzWz0kL7mKw1dt3Pzw=\");\n\n_c = CreateGigForm;\nexport default CreateGigForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGigForm\");","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx"],"names":["React","useState","useContext","fetcher","LoggedIn","CreateGigForm","gigName","setGigName","password","setPassword","choice","setChoice","setLoggedIn","logIn","e","preventDefault","length","alert","data","error","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACIJ,QAAQ,CAAC,EAAD,CADZ;AAAA,MACnBK,OADmB;AAAA,MACVC,UADU;;AAAA,mBAEMN,QAAQ,CAAC,EAAD,CAFd;AAAA,MAEnBO,QAFmB;AAAA,MAETC,WAFS;;AAAA,mBAGER,QAAQ,CAAC,IAAD,CAHV;AAAA,MAGnBS,MAHmB;AAAA,MAGXC,SAHW;;AAAA,oBAIFT,UAAU,CAACE,QAAD,CAJR;AAAA,MAIlBQ,WAJkB,eAIlBA,WAJkB;;AAM1B,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ;AAAA,0EAAG,iBAAOE,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,CAAC,CAACC,cAAF;;AACA,oBAAIT,OAAO,CAACU,MAAR,KAAmB,CAAnB,IAAwBR,QAAQ,CAACQ,MAAT,KAAoB,CAAhD,EAAmD;AACjDC,kBAAAA,KAAK,CACH,6CADG,CAAL;AAGD;;AANQ;AAAA,uBAOqBd,OAAO,gBAC3BO,MAAM,GAAG,KAAH,GAAW,QADU,GAEnC;AACEJ,kBAAAA,OAAO,EAAPA,OADF;AAEEE,kBAAAA,QAAQ,EAARA;AAFF,iBAFmC,CAP5B;;AAAA;AAAA;AAODU,gBAAAA,IAPC,kBAODA,IAPC;AAOKC,gBAAAA,KAPL,kBAOKA,KAPL;;AAAA,qBAcLA,KAdK;AAAA;AAAA;AAAA;;AAePF,gBAAAA,KAAK,CAACE,KAAD,CAAL;AAfO;;AAAA;AAkBTN,gBAAAA,KAAK;;AAlBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;AAAA,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,KAAK,EAAIP,OADT;AAEA,IAAA,QAAQ,EAAG,kBAAAQ,CAAC;AAAA,aAAGP,UAAU,CAACO,CAAC,CAACM,MAAF,CAASC,KAAV,CAAb;AAAA,KAFZ;AAGA,IAAA,WAAW,EAAG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AACA,IAAA,KAAK,EAAIb,QADT;AAEA,IAAA,QAAQ,EAAG,kBAAAM,CAAC;AAAA,aAAGL,WAAW,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV,CAAd;AAAA,KAFZ;AAGA,IAAA,WAAW,EAAG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAIX,MAAM,GAAG,YAAH,GAAkB,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAtBF,CADF,EAqCE;AAAG,IAAA,OAAO,EAAI;AAAA,aAAMC,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCArCF,CADF;AA2CD,CArDD;;GAAML,a;;KAAAA,a;AAuDN,eAAeA,aAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { mutate } from 'swr'\nimport { fetcher } from './util/fetcher'\nimport { LoggedIn } from '../pages/_app'\n\nconst CreateGigForm = () => {\n  const [gigName, setGigName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [choice, setChoice] = useState(true)\n  const { setLoggedIn } = useContext(LoggedIn)\n\n  const logIn = () => {\n    setLoggedIn(true)\n  }\n\n  return (\n    <div className=\"gig-form\">\n      <form\n        onSubmit={ async (e) => {\n          e.preventDefault()\n          if (gigName.length === 0 || password.length === 0) {\n            alert(\n              \"You can't have a blank Gig Name or Password\"\n            )\n          }\n          const { data, error } = await fetcher(\n            `/api/${choice ? \"get\" : \"create\" }`,\n            {\n              gigName,\n              password\n            }\n          )\n          if (error) {\n            alert(error)\n            return\n          }\n          logIn()\n        }}\n      >\n        <div className=\"inputs\">\n          <input\n          value = {gigName}\n          onChange= {e =>setGigName(e.target.value)}\n          placeholder = \"Gig Name\"\n          />\n          <input\n          value = {password}\n          onChange= {e =>setPassword(e.target.value)}\n          placeholder = \"Password\"\n          />\n          <input type=\"submit\" value = {choice ? \"View a gig\" : \"Create a gig\"}/>\n        </div>\n      </form>\n      <a onClick= { () => setChoice(!choice)}>\n        Want to create a gig? Click here\n      </a>\n    </div>\n  )\n}\n\nexport default CreateGigForm\n"]},"metadata":{},"sourceType":"module"}
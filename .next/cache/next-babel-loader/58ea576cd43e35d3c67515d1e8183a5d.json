{"ast":null,"code":"var _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport '../styles/index.scss';\nimport React, { useState } from 'react';\nexport const LoggedIn = /*#__PURE__*/React.createContext(undefined);\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n  return __jsx(LoggedIn.Provider, {\n    value: {\n      loggedIn,\n      setLoggedIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/pages/_app.tsx"],"names":["React","useState","LoggedIn","createContext","undefined","MyApp","Component","pageProps","loggedIn","setLoggedIn"],"mappings":";;;;;AAAA,OAAO,sBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,QAAQ,gBAAGF,KAAK,CAACG,aAAN,CAAyCC,SAAzC,CAAjB;;AASP,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmD;AACjD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAU,KAAV,CAAxC;AAEA,SACE,MAAC,QAAD,CAAU,QAAV;AAAmB,IAAA,KAAK,EAAI;AAAEO,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;AAED,eAAeF,KAAf","sourcesContent":["import '../styles/index.scss'\nimport React, { useState } from 'react'\n\nexport const LoggedIn = React.createContext<Context | undefined>(undefined);\n\ninterface Context {\n  loggedIn: boolean;\n  \n}\n\nimport type { AppProps /*, AppContext */ } from 'next/app'\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  const [loggedIn, setLoggedIn] = useState<boolean>(false)\n\n  return (\n    <LoggedIn.Provider value = {{ loggedIn, setLoggedIn }}>\n      <Component {...pageProps} />\n    </LoggedIn.Provider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/songs.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSongs } from './util/hooks';\n\nvar Songs = function Songs() {\n  _s();\n\n  var _useSongs = useSongs(),\n      songs = _useSongs.songs;\n\n  return songs ? __jsx(React.Fragment, null, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, songs.map(function (item, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, item.title, item.artist));\n  }))) : null;\n};\n\n_s(Songs, \"aRQHTTfMzEVwED8US09+MtLySQU=\", false, function () {\n  return [useSongs];\n});\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/songs.tsx"],"names":["React","useSongs","Songs","songs","map","item","i","title","artist"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBACAD,QAAQ,EADR;AAAA,MACVE,KADU,aACVA,KADU;;AAGlB,SAAOA,KAAK,GACV,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,KADR,EAEGF,IAAI,CAACG,MAFR,CADF,CADS;AAAA,GAAV,CADH,CADF,CADU,GAaR,IAbJ;AAcD,CAjBD;;GAAMN,K;UACcD,Q;;;KADdC,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport { useSongs } from './util/hooks'\n\nconst Songs = () => {\n  const { songs } = useSongs()\n\n  return songs ? (\n    <>\n      <ul>\n        {songs.map((item, i) => (\n          <li key={i}>\n            <p>\n              {item.title}\n              {item.artist}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  ) : null\n}\n\nexport default Songs\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { mutate } from 'swr';\nimport { fetcher } from './util/fetcher';\n\nconst CreateGigForm = ({}) => {\n  const {\n    0: gigName,\n    1: setGigName\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: login,\n    1: setLogin\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n\n      if (gigName.length === 0 || password.length === 0) {\n        alert(\"You can't have a blank Gig Name or Password\");\n      }\n\n      setLoading(true);\n      const {\n        data,\n        error\n      } = await fetcher(`/api/${login ? \"login\" : \"create\"}`, {\n        gigName,\n        password\n      });\n\n      if (error) {\n        console.log(error);\n        setLoading(false);\n        return;\n      }\n\n      await mutate(\"api/set\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    value: gigName,\n    onChange: e => setGigName(e.target.value),\n    placeholder: \"Gig Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: login ? \"View a gig\" : \"Create a gig\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CreateGigForm;","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx"],"names":["React","useState","mutate","fetcher","CreateGigForm","gigName","setGigName","password","setPassword","login","setLogin","loading","setLoading","e","preventDefault","length","alert","data","error","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,MAAMC,aAAa,GAAG,CAAC,EAAD,KAAQ;AAC5B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,MAAMY,CAAN,IAAW;AACnBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAIT,OAAO,CAACU,MAAR,KAAmB,CAAnB,IAAwBR,QAAQ,CAACQ,MAAT,KAAoB,CAAhD,EAAmD;AACjDC,QAAAA,KAAK,CACH,6CADG,CAAL;AAGD;;AACDJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAM;AAAEK,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,MAAMf,OAAO,CAClC,QAAOM,KAAK,GAAG,OAAH,GAAa,QAAU,EADD,EAEnC;AACEJ,QAAAA,OADF;AAEEE,QAAAA;AAFF,OAFmC,CAArC;;AAOA,UAAIW,KAAJ,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACD,YAAMV,MAAM,CAAC,SAAD,CAAZ;AACD,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBE;AACE,IAAA,KAAK,EAAIG,OADX;AAEE,IAAA,QAAQ,EAAGQ,CAAC,IAAGP,UAAU,CAACO,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EA6BE;AACE,IAAA,KAAK,EAAIf,QADX;AAEE,IAAA,QAAQ,EAAGM,CAAC,IAAGL,WAAW,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF5B;AAGE,IAAA,WAAW,EAAG,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,EAkCE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEb,KAAK,GAAG,YAAH,GAAkB,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF,CADF;AAwCD,CA9CD;;AAgDA,eAAeL,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { mutate } from 'swr'\nimport { fetcher } from './util/fetcher'\n\nconst CreateGigForm = ({}) => {\n  const [gigName, setGigName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [login, setLogin] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <div>\n      <form\n        onSubmit={async e => {\n          e.preventDefault()\n          if (gigName.length === 0 || password.length === 0) {\n            alert(\n              \"You can't have a blank Gig Name or Password\"\n            )\n          }\n          setLoading(true)\n          const { data, error } = await fetcher(\n            `/api/${login ? \"login\" : \"create\" }`,\n            {\n              gigName,\n              password\n            }\n          )\n          if (error) {\n            console.log(error)\n            setLoading(false)\n            return\n          }\n          await mutate(\"api/set\")\n        }}\n      >\n        <input\n          value = {gigName}\n          onChange= {e =>setGigName(e.target.value)}\n          placeholder = \"Gig Name\"\n        />\n        <input\n          value = {password}\n          onChange= {e =>setPassword(e.target.value)}\n          placeholder = \"Password\"\n        />\n        <input type=\"submit\" value={login ? \"View a gig\" : \"Create a gig\"}/>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateGigForm\n"]},"metadata":{},"sourceType":"module"}
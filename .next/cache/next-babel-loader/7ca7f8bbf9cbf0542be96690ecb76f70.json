{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/songs.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSongs } from './util/hooks';\n\nvar Songs = function Songs() {\n  _s();\n\n  var _useSongs = useSongs(),\n      songs = _useSongs.songs;\n\n  if (!gigInfo) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, \"no songs\"));\n  } else {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, \"there are songs\"));\n  }\n};\n\n_s(Songs, \"aRQHTTfMzEVwED8US09+MtLySQU=\", false, function () {\n  return [useSongs];\n});\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/songs.tsx"],"names":["React","useSongs","Songs","songs","gigInfo"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAqC,cAArC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBACAD,QAAQ,EADR;AAAA,MACVE,KADU,aACVA,KADU;;AAGlB,MAAI,CAACC,OAAL,EAAc;AACZ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD,GAND,MAMO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CADF;AAKD;AACF,CAhBD;;GAAMF,K;UACcD,Q;;;KADdC,K;AAkBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport DeleteSongButton from './deleteSongButton'\nimport { useSongs, useGigInfo } from './util/hooks'\n\nconst Songs = () => {\n  const { songs } = useSongs()\n\n  if (!gigInfo) {\n    return (\n      <div>\n        <p>no songs</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n      <p>there are songs</p>\n      </div>\n    )\n  }\n}\n\nexport default Songs\n"]},"metadata":{},"sourceType":"module"}
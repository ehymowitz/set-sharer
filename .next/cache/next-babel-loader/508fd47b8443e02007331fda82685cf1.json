{"ast":null,"code":"var _jsxFileName = \"/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { fetcher } from './util/fetcher';\nimport { LoggedIn } from '../pages/_app';\n\nconst CreateGigForm = () => {\n  const {\n    0: gigName,\n    1: setGigName\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: choice,\n    1: setChoice\n  } = useState(true);\n  const {\n    setLoggedIn\n  } = useContext(LoggedIn);\n\n  const logIn = () => {\n    setLoggedIn(true);\n  };\n\n  return __jsx(\"div\", {\n    className: \"gig-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n\n      if (gigName.length === 0 || password.length === 0) {\n        alert(\"You can't have a blank Gig Name or Password\");\n      }\n\n      const {\n        data,\n        error\n      } = await fetcher(`/api/login`, // `/api/${choice ? \"login\" : \"create\" }`,\n      {\n        gigName,\n        password\n      });\n      console.log({\n        data\n      });\n\n      if (error) {\n        alert(error);\n        return;\n      }\n\n      logIn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: gigName,\n    onChange: e => setGigName(e.target.value),\n    placeholder: \"Gig Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: choice ? \"View a gig\" : \"Create a gig\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }))), __jsx(\"a\", {\n    onClick: () => setChoice(!choice),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Want to create a gig? Click here\"));\n};\n\nexport default CreateGigForm;","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/components/createGigForm.tsx"],"names":["React","useState","useContext","fetcher","LoggedIn","CreateGigForm","gigName","setGigName","password","setPassword","choice","setChoice","setLoggedIn","logIn","e","preventDefault","length","alert","data","error","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkBV,UAAU,CAACE,QAAD,CAAlC;;AAEA,QAAMS,KAAK,GAAG,MAAM;AAClBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAG,MAAOE,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAIT,OAAO,CAACU,MAAR,KAAmB,CAAnB,IAAwBR,QAAQ,CAACQ,MAAT,KAAoB,CAAhD,EAAmD;AACjDC,QAAAA,KAAK,CACH,6CADG,CAAL;AAGD;;AACD,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,MAAMhB,OAAO,CAClC,YADkC,EAEnC;AACA;AACEG,QAAAA,OADF;AAEEE,QAAAA;AAFF,OAHmC,CAArC;AAQAY,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,QAAAA;AAAD,OAAZ;;AACA,UAAIC,KAAJ,EAAW;AACTF,QAAAA,KAAK,CAACE,KAAD,CAAL;AACA;AACD;;AACDN,MAAAA,KAAK;AACN,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,KAAK,EAAIP,OADT;AAEA,IAAA,QAAQ,EAAGQ,CAAC,IAAGP,UAAU,CAACO,CAAC,CAACQ,MAAF,CAASC,KAAV,CAFzB;AAGA,IAAA,WAAW,EAAG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AACA,IAAA,KAAK,EAAIf,QADT;AAEA,IAAA,QAAQ,EAAGM,CAAC,IAAGL,WAAW,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF1B;AAGA,IAAA,WAAW,EAAG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAIb,MAAM,GAAG,YAAH,GAAkB,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAxBF,CADF,EAuCE;AAAG,IAAA,OAAO,EAAI,MAAMC,SAAS,CAAC,CAACD,MAAF,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAvCF,CADF;AA6CD,CAvDD;;AAyDA,eAAeL,aAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { mutate } from 'swr'\nimport { fetcher } from './util/fetcher'\nimport { LoggedIn } from '../pages/_app'\nimport * as login from '../pages/api/login'\n\nconst CreateGigForm = () => {\n  const [gigName, setGigName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [choice, setChoice] = useState(true)\n  const { setLoggedIn } = useContext(LoggedIn)\n\n  const logIn = () => {\n    setLoggedIn(true)\n  }\n\n  return (\n    <div className=\"gig-form\">\n      <form\n        onSubmit={ async (e) => {\n          e.preventDefault()\n          if (gigName.length === 0 || password.length === 0) {\n            alert(\n              \"You can't have a blank Gig Name or Password\"\n            )\n          }\n          const { data, error } = await fetcher(\n            `/api/login`,\n            // `/api/${choice ? \"login\" : \"create\" }`,\n            {\n              gigName,\n              password\n            }\n          )\n          console.log({data})\n          if (error) {\n            alert(error)\n            return\n          }\n          logIn()\n        }}\n      >\n        <div className=\"inputs\">\n          <input\n          value = {gigName}\n          onChange= {e =>setGigName(e.target.value)}\n          placeholder = \"Gig Name\"\n          />\n          <input\n          value = {password}\n          onChange= {e =>setPassword(e.target.value)}\n          placeholder = \"Password\"\n          />\n          <input type=\"submit\" value = {choice ? \"View a gig\" : \"Create a gig\"}/>\n        </div>\n      </form>\n      <a onClick= { () => setChoice(!choice)}>\n        Want to create a gig? Click here\n      </a>\n    </div>\n  )\n}\n\nexport default CreateGigForm\n"]},"metadata":{},"sourceType":"module"}
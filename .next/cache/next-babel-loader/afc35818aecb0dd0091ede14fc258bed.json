{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\nexport default (async (req, res) => {\n  const {\n    token\n  } = req.cookies;\n\n  if (token) {\n    const {\n      id,\n      setName\n    } = jwt.verify(token, process.env.JWT_SECRET);\n    const songs = await prisma.song.findMany({\n      where: {\n        setId: id\n      },\n      include: {\n        artist: true\n      }\n    });\n    res.json(songs);\n  } else {\n    res.json([]);\n  }\n});","map":{"version":3,"sources":["/Users/elie/code/ehymowitz/set-sharer/pages/api/songs.ts"],"names":["jwt","PrismaClient","prisma","req","res","token","cookies","id","setName","verify","process","env","JWT_SECRET","songs","song","findMany","where","setId","include","artist","json"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,GAAG,CAACG,OAAtB;;AAEA,MAAID,KAAJ,EAAW;AACT,UAAM;AAAEE,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAkBR,GAAG,CAACS,MAAJ,CAAWJ,KAAX,EAAkBK,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAxB;AACA,UAAMC,KAAK,GAAG,MAAMX,MAAM,CAACY,IAAP,CAAYC,QAAZ,CAAqB;AACvCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OADgC;AAEvCW,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAF8B,KAArB,CAApB;AAIAf,IAAAA,GAAG,CAACgB,IAAJ,CAASP,KAAT;AACD,GAPD,MAOO;AACLT,IAAAA,GAAG,CAACgB,IAAJ,CAAS,EAAT;AACD;AACF,CAbD","sourcesContent":["import jwt from 'jsonwebtoken'\nimport { PrismaClient } from \"@prisma/client\"\nconst prisma = new PrismaClient()\n\nexport default async (req, res) => {\n  const { token } = req.cookies\n\n  if (token) {\n    const { id, setName } = jwt.verify(token, process.env.JWT_SECRET)\n    const songs = await prisma.song.findMany({\n      where: { setId: id },\n      include: { artist: true}\n    })\n    res.json(songs)\n  } else {\n    res.json([])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}